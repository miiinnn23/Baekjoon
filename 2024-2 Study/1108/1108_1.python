def solution(triangle):
    N = len(triangle)
    summation = [[0 for _ in range(i)] for i in range(1, N + 1)]

    summation[0][0] = triangle[0][0]

    for i in range(1, N):
        for j in range(i + 1):
            if j == 0:
                summation[i][j] = triangle[i][j] + summation[i - 1][j]
            elif j == i:
                summation[i][j] = triangle[i][j] + summation[i - 1][j - 1]
            else:
                summation[i][j] = max(summation[i - 1][j], summation[i - 1][j - 1]) + triangle[i][j]

    return max(summation[N - 1])


# N = int(input())
# triangle = [list(map(int, input().split())) for _ in range(N)]
triangle = [[7], [3, 8], [8, 1, 0], [2, 7, 4, 4], [4, 5, 2, 6, 5]]
print(solution(triangle))