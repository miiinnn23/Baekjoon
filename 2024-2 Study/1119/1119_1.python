# https://chaemi720.tistory.com/188
def binary_search(arr, start, end, target):
    while start < end:
        mid = start + (end - start) // 2
        if arr[mid] >= target:
            end = mid
        else:
            start = mid + 1
    return start


def solution(info, query):
    data = {}
    # 모든 경우의 수의 쿼리 만드는 방법
    for lan in ['cpp', 'java', 'python', '-']:
        for job in ['backend', 'frontend', '-']:
            for car in ['junior', 'senior', '-']:
                for food in ['chicken', 'pizza', '-']:
                    data.setdefault((lan, job, car, food), list())
    
    for i in info:
        i = i.split()
        for l in [i[0], '-']:
            for j in [i[1], '-']:
                for c in [i[2], '-']:
                    for f in [i[3], '-']:
                        data[(l, j, c, f)].append(int(i[4]))

    # 데이터 정렬
    for d in data:
        data[d].sort()

    answer = []
    for q in query:
        que = q.replace('and', '')
        que = que.split()
        target = int(que[4])
        
        sorting = data[(que[0], que[1], que[2], que[3])]
        start, end = 0, len(sorting)

        idx = binary_search(sorting, start, end, target)
        answer.append(len(sorting) - idx)

    return answer

# info = input()
info = ["java backend junior pizza 150","python frontend senior chicken 210","python frontend senior chicken 150","cpp backend senior pizza 260","java backend junior chicken 80","python backend senior chicken 50"]
query = ["java and backend and junior and pizza 100","python and frontend and senior and chicken 200","cpp and - and senior and pizza 250","- and backend and senior and - 150","- and - and - and chicken 100","- and - and - and - 150"]
print(solution(info, query))